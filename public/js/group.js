import{a as E,d as H}from"./assets/logger-DkynYDV8.js";import{g as w}from"./assets/professions-OS0z_JJQ.js";let r={enabled:!1,members:[]},l={},u=[],m=null,T=null,y=null,g=null,k=null,v=null,b=null,h=null,B=null;document.addEventListener("DOMContentLoaded",()=>{$(),A(),j(),R(),U(),q()});function $(){m=document.getElementById("group-enabled-toggle"),T=document.getElementById("group-member-count"),y=document.getElementById("group-members-list"),g=document.getElementById("available-players-list"),k=document.getElementById("clear-group-btn"),v=document.getElementById("registry-list"),b=document.getElementById("registry-uid-input"),h=document.getElementById("registry-name-input"),B=document.getElementById("registry-save-btn")}function A(){const e=document.getElementById("group-close-button");e&&window.electronAPI&&e.addEventListener("click",()=>{window.close()}),m&&m.addEventListener("change",F),k&&k.addEventListener("click",_),B&&B.addEventListener("click",D)}function j(){const e=document.getElementById("group-drag-indicator");if(!e||!window.electronAPI)return;let t=!1,o=0,n=0;e.addEventListener("mousedown",async c=>{t=!0,o=c.screenX,n=c.screenY;const s=await window.electronAPI.getWindowPosition(),i=s.x,a=s.y,d=f=>{if(!t)return;const N=f.screenX-o,G=f.screenY-n;window.electronAPI.setWindowPosition(i+N,a+G)},p=()=>{t=!1,document.removeEventListener("mousemove",d),document.removeEventListener("mouseup",p)};document.addEventListener("mousemove",d),document.addEventListener("mouseup",p)})}async function R(){try{const t=await(await fetch("/api/manual-group")).json();t.code===0&&t.data&&(r=t.data,P())}catch(e){console.error("Failed to load group state:",e)}}async function L(){try{(await(await fetch("/api/manual-group",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(r)})).json()).code===0&&E("Group state saved")}catch(e){console.error("Failed to save group state:",e)}}async function U(){try{const t=await(await fetch("/api/player-registry")).json();t.code===0&&t.data&&(l=t.data,S())}catch(e){console.error("Failed to load player registry:",e)}}async function C(e,t){try{const n=await(await fetch("/api/player-registry/save",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({uid:e,name:t})})).json();n.code===0&&n.data&&(l=n.data,S(),E(`Saved player: ${e} -> ${t}`),b&&(b.value=""),h&&(h.value=""))}catch(o){console.error("Failed to save player:",o)}}async function O(e){try{const o=await(await fetch("/api/player-registry/delete",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({uid:e})})).json();o.code===0&&o.data&&(l=o.data,S(),E(`Deleted player: ${e}`))}catch(t){console.error("Failed to delete player:",t)}}async function M(){try{const t=await(await fetch("/api/data")).json();E("Fetched available players data:",t),t.code===0&&t.user?(u=Object.entries(t.user).map(([o,n])=>{var s,i,a;const c=n.name&&n.name!=="Unknown"&&n.name.trim()!==""?n.name:((s=l[o])==null?void 0:s.name)||"Unknown";return{...n,uuid:o,name:c,profession:n.profession||"Unknown",currentHp:n.hp||0,maxHp:n.max_hp||0,totalDmg:((i=n.total_damage)==null?void 0:i.total)||0,totalDmgTaken:n.taken_damage||0,totalHeal:((a=n.total_healing)==null?void 0:a.total)||0,totalShield:n.total_shield||0,realtimeDps:n.total_dps||0,percentDmg:0,percentDmgTaken:0,percentHeal:0,critRate:0}}),I()):(H("No user data received"),u=[],I())}catch(e){console.error("Failed to fetch available players:",e),u=[],I()}}function F(){m&&(r.enabled=m.checked,L(),E("Group filter:",r.enabled?"ENABLED":"DISABLED"))}function _(){confirm("Are you sure you want to remove all group members?")&&(r.members=[],L(),P())}function D(){if(!b||!h)return;const e=b.value.trim(),t=h.value.trim();if(!e||!t){alert("Please enter both UID and Name");return}C(e,t)}function X(e){r.members.includes(e)||(r.members.push(e),L(),P())}function Y(e){r.members=r.members.filter(t=>t!==e),L(),P()}function P(){m&&(m.checked=r.enabled),T&&(T.textContent=r.members.length.toString()),x()}function x(){if(y){if(r.members.length===0){y.innerHTML='<div class="empty-state">No members in group</div>';return}y.innerHTML="",r.members.forEach(e=>{const t=u.find(n=>n.uuid===e),o=K(e,t);y.appendChild(o)})}}function K(e,t){var f;const o=document.createElement("div");o.className="group-member-item";const n=(t==null?void 0:t.name)||((f=l[e])==null?void 0:f.name)||"Unknown",s=((t==null?void 0:t.profession)||"Unknown").split("-"),i=s[0],a=s[1],d=a?w(a):w(i);o.innerHTML=`
        <div class="player-info">
            <span class="player-name">${n}</span>
            <span class="player-uid">(${e.slice(0,8)}...)</span>
            <span class="player-profession">${d.name}</span>
        </div>
        <button class="btn-remove" data-uuid="${e}">Remove</button>
    `;const p=o.querySelector(".btn-remove");return p&&p.addEventListener("click",()=>Y(e)),o}function I(){if(!g)return;const e=u.filter(t=>t.uuid&&!r.members.includes(t.uuid));if(e.length===0){g.innerHTML='<div class="empty-state">No available players</div>';return}g.innerHTML="",e.forEach(t=>{if(!t.uuid)return;const o=J(t);g.appendChild(o)})}function J(e){var a,d;const t=document.createElement("div");t.className="available-player-item";const o=e.name&&e.name!=="Unknown"&&e.name.trim()!==""?e.name:e.uuid&&((a=l[e.uuid])==null?void 0:a.name)||"Unknown",n=(e.profession||"Unknown").split("-"),c=n[0],s=n[1],i=s?w(s):w(c);return t.innerHTML=`
        <div class="player-info">
            <span class="player-name">${o}</span>
            <span class="player-uid">(${((d=e.uuid)==null?void 0:d.slice(0,8))||"N/A"}...)</span>
            <span class="player-profession">${i.name}</span>
        </div>
    `,t.addEventListener("click",()=>{e.uuid&&X(e.uuid)}),t}function S(){if(!v)return;const e=Object.entries(l);if(e.length===0){v.innerHTML='<div class="empty-state">No saved players</div>';return}v.innerHTML="",e.forEach(([t,o])=>{const n=W(t,o.name);v.appendChild(n)})}function W(e,t){const o=document.createElement("div");o.className="group-member-item",o.innerHTML=`
        <div class="player-info">
            <span class="player-name">${t}</span>
            <span class="player-uid">(${e.slice(0,8)}...)</span>
        </div>
        <button class="btn-remove" data-uid="${e}">Delete</button>
    `;const n=o.querySelector(".btn-remove");return n&&n.addEventListener("click",()=>O(e)),o}function q(){M(),setInterval(()=>{M()},2e3)}window.groupState={manualGroupState:r,playerRegistry:l,availablePlayers:u,refreshData:M};
