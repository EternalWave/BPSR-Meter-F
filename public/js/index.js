import{d as at,a as O}from"./assets/logger-DkynYDV8.js";import{g as N}from"./assets/professions-OS0z_JJQ.js";let Z="en",L={};async function q(t){try{const e=await fetch(`/api/translations/${t}`);if(!e.ok)return console.error("Translation response not ok:",e.status,e.statusText),!1;const a=await e.json();return a.code===0&&a.data?(L=a.data,Z=t,console.log("Successfully loaded translations for language:",t),console.log("Loaded skills:",Object.keys(L.skills||{}).length,"translations"),!0):(console.error("Translation API returned error:",a),!1)}catch(e){return console.error("Failed to load translations:",e),!1}}function u(t,e=null){const a=t.split(".");let s=L;for(const n of a)if(s&&typeof s=="object"&&n in s)s=s[n];else return e||t;return s||e||t}function nt(t,e=null){const a=String(t);return L.skills?L.skills[a]||e||a:e||a}function R(t){var e;return((e=L.professions)==null?void 0:e[t])||t}function ot(){return Z}function pt(){console.log("Current language:",Z),console.log("Translations object:",L),console.log("Sample skill translation for 1241:",nt("1241","fallback")),console.log("Sample UI translation for ui.controls.skills:",u("ui.controls.skills","fallback"))}async function ft(t){console.log("Force loading translations for:",t);const e=await q(t);console.log("Load success:",e),e&&console.log("Translation loaded successfully")}typeof window<"u"&&(window.testTranslations=pt,window.forceLoadTranslations=ft);async function mt(){try{const e=await(await fetch("/api/settings")).json();return e.code===0&&e.data?e.data:{}}catch(t){return console.error("Error fetching settings:",t),{}}}async function yt(){try{return(await(await fetch("/api/reset")).json()).code===0}catch(t){return console.error("Error resetting statistics:",t),!1}}async function kt(t){try{return(await fetch("/api/language",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({language:t})})).ok}catch(e){return console.error("Error changing language:",e),!1}}async function vt(){try{const e=await(await fetch("/api/manual-group")).json();return e.code===0&&e.data?e.data:null}catch(t){return console.error("Error fetching manual group:",t),null}}async function bt(){try{const e=await(await fetch("/api/player-registry")).json();return e.code===0&&e.data?e.data:{}}catch(t){return console.error("Error fetching player registry:",t),{}}}function m(t){return t>=1e12?(t/1e12).toFixed(1)+"T":t>=1e9?(t/1e9).toFixed(1)+"G":t>=1e6?(t/1e6).toFixed(1)+"M":t>=1e3?(t/1e3).toFixed(1)+"k":t.toFixed(0)}let k="nearby",j="totalDmg",W="desc",T=!1,G=!1,C=!1,K=!1,U=null,A={enabled:!1,members:[]},V={};document.addEventListener("DOMContentLoaded",async()=>{try{const e=(await mt()).language||"en";await q(e)||(at("Failed to load translations, falling back to English"),await q("en"))}catch(t){console.error("Failed to initialize translations:",t),await q("en")}await tt(),wt(),window.electronAPI&&ht(),_t()});function wt(){var g,f;const t=document.getElementById("close-button");t&&window.electronAPI&&t.addEventListener("click",()=>{window.electronAPI.closeWindow()});const e=document.getElementById("lock-button");e&&window.electronAPI&&e.addEventListener("click",()=>{window.electronAPI.toggleLockState()});const a=document.getElementById("language-btn");a&&a.addEventListener("click",Pt);const s=document.getElementById("sync-button");s&&s.addEventListener("click",St),It();const n=document.getElementById("group-btn");n&&window.electronAPI&&n.addEventListener("click",()=>{window.electronAPI.openGroupWindow(),setTimeout(()=>x(!0),100)});const l=document.getElementById("history-btn");O("openHistoryWindow method:",(g=window.electronAPI)==null?void 0:g.openHistoryWindow),l&&window.electronAPI?l.addEventListener("click",()=>{window.electronAPI.openHistoryWindow()}):at("History button setup failed:",{hasButton:!!l,hasElectronAPI:!!window.electronAPI,hasMethod:!!((f=window.electronAPI)!=null&&f.openHistoryWindow)});const o=document.getElementById("nearby-group-btn");o&&o.addEventListener("click",()=>{k=k==="nearby"?"solo":"nearby",o.textContent=k==="nearby"?"Nearby":"Solo",o.classList.toggle("solo",k==="solo"),[document.getElementById("sort-dmg-btn"),document.getElementById("sort-tank-btn"),document.getElementById("sort-heal-btn")].forEach(r=>{r&&(r.style.display=k==="solo"?"none":"block")}),_()});const d=document.getElementById("skills-btn");d&&d.addEventListener("click",()=>{k=k==="skills"?"nearby":"skills",d.classList.toggle("active",k==="skills"),[document.getElementById("sort-dmg-btn"),document.getElementById("sort-tank-btn"),document.getElementById("sort-heal-btn")].forEach(r=>{r&&(r.style.display=k==="skills"?"none":"block")}),o&&(k==="skills"?o.style.display="none":(o.style.display="block",o.textContent=k==="nearby"?"Nearby":"Solo")),_()}),window.addEventListener("focus",()=>{setTimeout(()=>x(!0),50)}),document.addEventListener("visibilitychange",()=>{document.hidden||setTimeout(()=>x(!0),50)})}function ht(){window.electronAPI&&(window.electronAPI.onLockStateChanged(t=>{T=t,Lt(t),Tt()}),window.electronAPI.setIgnoreMouseEvents(!1),C=!1,Et(),$t(),setTimeout(()=>x(!0),100))}function Et(){const t=document.getElementById("drag-indicator");if(!t||!window.electronAPI)return;let e=!1,a=0,s=0,n=0,l=0;t.addEventListener("mousedown",async o=>{if(T)return;e=!0,G=!0,a=o.screenX,s=o.screenY;const d=await window.electronAPI.getWindowPosition();n=d.x,l=d.y,J(),o.preventDefault()}),document.addEventListener("mousemove",o=>{var r;if(!e||T)return;const d=o.screenX-a,g=o.screenY-s,f=n+d,i=l+g;(r=window.electronAPI)==null||r.setWindowPosition(f,i)}),document.addEventListener("mouseup",()=>{e&&(e=!1,setTimeout(()=>{e||(Q(),G=!1)},100))})}function J(){window.electronAPI&&C&&(window.electronAPI.setIgnoreMouseEvents(!1),C=!1)}function Q(){K||window.electronAPI&&!C&&(window.electronAPI.setIgnoreMouseEvents(!0,{forward:!0}),C=!0)}function $t(){window.electronAPI&&(document.addEventListener("mouseover",t=>{let e=!1;T?e=[".controls",".control-button",".sync-button",".advanced-lite-btn","#player-bars-container",".skills-container",".modal",".add-to-registry-btn"].some(s=>t.target.closest(s)!==null):e=[".controls",".drag-indicator","#player-bars-container",".skills-container",".modal",".add-to-registry-btn"].some(s=>t.target.closest(s)!==null),e&&J()}),document.addEventListener("mouseout",t=>{setTimeout(()=>{let e=!1;const a=t.clientX,s=t.clientY,n=document.elementFromPoint(a,s);n&&(T?e=[".controls",".control-button",".sync-button",".advanced-lite-btn","#player-bars-container",".skills-container",".modal"].some(o=>n.closest(o)!==null):e=[".controls",".drag-indicator","#player-bars-container",".skills-container",".modal"].some(o=>n.closest(o)!==null)),e||Q()},50)}),document.addEventListener("mouseleave",()=>{Q()}),document.addEventListener("wheel",t=>{t.target.closest(".skills-container, #player-bars-container")&&(K=!0,J(),U&&clearTimeout(U),U=setTimeout(()=>{K=!1},150))},{passive:!0}))}function It(){const t=document.getElementById("sort-dmg-btn"),e=document.getElementById("sort-tank-btn"),a=document.getElementById("sort-heal-btn");t&&t.addEventListener("click",()=>F("totalDmg")),e&&e.addEventListener("click",()=>F("totalDmgTaken")),a&&a.addEventListener("click",()=>F("totalHeal"))}function F(t){j===t?W=W==="asc"?"desc":"asc":(j=t,W="desc"),Bt(),_()}function Bt(){["sort-dmg-btn","sort-tank-btn","sort-heal-btn"].forEach(a=>{const s=document.getElementById(a);s&&s.classList.remove("active")});const e=document.getElementById(`sort-${j==="totalDmg"?"dmg":j==="totalDmgTaken"?"tank":"heal"}-btn`);e&&e.classList.add("active")}async function Pt(){const t=ot()==="en"?"zh":"en";try{await kt(t)&&(await q(t),await _())}catch(e){console.error("Failed to change language:",e)}}async function St(){const t=document.getElementById("sync-button");t&&(t.style.opacity="0.5",t.style.pointerEvents="none"),await yt(),await _(),t&&setTimeout(()=>{t.style.opacity="1",t.style.pointerEvents="auto"},300)}function Lt(t){const e=document.getElementById("lock-button");e&&(e.innerHTML=t?'<i class="fa-solid fa-lock"></i>':'<i class="fa-solid fa-lock-open"></i>',e.title=t?"Unlock position":"Lock position");const a=document.querySelector(".dps-meter");a&&a.classList.toggle("locked",t)}function Tt(){window.electronAPI&&(T?(window.electronAPI.setIgnoreMouseEvents(!0,{forward:!0}),C=!0):(window.electronAPI.setIgnoreMouseEvents(!1),C=!1))}async function tt(){V=await bt()}async function Ct(t,e){try{if((await(await fetch("/api/player-registry/save",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({uid:t,name:e})})).json()).code===0){O(`Added player to registry: ${t} -> ${e}`);const n=document.querySelector(`.add-to-registry-btn[data-uid="${t}"]`);if(n){const l=n.innerHTML;n.innerHTML='<i class="fa-solid fa-check"></i>',n.style.background="rgba(46, 204, 113, 0.3)",n.style.borderColor="#2ecc71",n.style.color="#2ecc71",setTimeout(()=>{n.innerHTML=l,n.style.background="",n.style.borderColor="",n.style.color=""},1e3)}await tt()}}catch(a){console.error("Failed to add player to registry:",a)}}function _t(){_(),setInterval(_,50),setInterval(async()=>{A=await vt()},2e3),setInterval(tt,1e4)}let X=0,et=0;async function _(){const t=document.getElementById("player-bars-container"),e=document.getElementById("loading-indicator"),a=document.getElementById("player-bars-container");if(t)try{if(k==="skills"){const[i,r]=await Promise.all([fetch("/api/skills"),fetch("/api/settings")]),c=await i.json();c.code===0&&c.data&&c.data.skills&&Object.keys(c.data.skills).length>0?(e&&(e.style.display="none"),a&&(a.style.display="block"),xt(c.data.skills,c.startTime),x()):(e&&(e.style.display="flex"),a&&(a.style.display="none"));return}const l=await(await fetch(k==="solo"?"/api/solo-user":"/api/data")).json();l.startTime&&l.startTime!==et&&(O("Server reset detected. Clearing local state."),et=l.startTime,X=0);let o=Object.entries(l.user).map(([i,r])=>({...r,uid:parseInt(i,10)}));if(o=o.filter(i=>i.total_damage&&i.total_damage.total>0||i.taken_damage>0||i.total_healing&&i.total_healing.total>0),A&&A.enabled&&A.members&&A.members.length>0){const i=A.members;o=o.filter(r=>i.includes(String(r.uid))),O(`Manual group filter applied: ${o.length} players in group`)}if(!o||o.length===0){e&&(e.style.display="flex"),a&&(a.style.display="none");return}e&&(e.style.display="none"),a&&(a.style.display="flex");const d=o.reduce((i,r)=>i+(r.total_damage&&r.total_damage.total?Number(r.total_damage.total):0),0);d!==X&&(X=d),o.forEach(i=>{const r=i.total_damage&&i.total_damage.total?Number(i.total_damage.total):0;i.damagePercent=d>0?Math.max(0,Math.min(100,r/d*100)):0});let g=null;if(k==="solo"){const i=Object.keys(l.user)[0];g=i?parseInt(i,10):null}else try{const r=await(await fetch("/api/solo-user")).json();r.user&&Object.keys(r.user).length>0&&(g=parseInt(Object.keys(r.user)[0],10))}catch(i){O("Could not get local user:",i)}Dt(o);let f=null;if(k==="nearby"&&g){const i=o.slice(0,10),r=i.some(c=>c.uid===g);o.length>10&&!r&&(f=o.find(c=>c.uid===g)),o.length>10&&(o=i)}f&&o.push(f),At(t,o,g),x()}catch(s){console.error("Error in fetchDataAndRender:",s),t&&(t.innerHTML=`<div id="message-display">${u("ui.messages.waitingForData")}</div>`),e&&(e.style.display="flex"),a&&(a.style.display="none")}}function Dt(t){t.sort((e,a)=>{var l,o,d,g,f,i;let s,n;switch(j){case"totalDmg":s=(l=e.total_damage)!=null&&l.total?Number(e.total_damage.total):0,n=(o=a.total_damage)!=null&&o.total?Number(a.total_damage.total):0;break;case"totalDmgTaken":s=Number(e.taken_damage)||0,n=Number(a.taken_damage)||0;break;case"totalHeal":s=(d=e.total_healing)!=null&&d.total?Number(e.total_healing.total):0,n=(g=a.total_healing)!=null&&g.total?Number(a.total_healing.total):0;break;default:s=(f=e.total_damage)!=null&&f.total?Number(e.total_damage.total):0,n=(i=a.total_damage)!=null&&i.total?Number(a.total_damage.total):0}return W==="asc"?s-n:n-s})}let Y=0,z=0;function lt(t,e){return e&&e!=="Unknown"&&e.trim()!==""?e:V[t]?V[t].name:"Unknown"}function x(t=!1){var e;(e=window.electronAPI)!=null&&e.resizeWindowToContent&&(G||requestAnimationFrame(()=>{const a=document.querySelector(".dps-meter");if(a){const s=a.getBoundingClientRect(),n=Math.ceil(s.width),l=Math.ceil(s.height);if(n<100||l<50||n>2e3||l>1500)return;if(t)window.electronAPI.resizeWindowToContent(n,l),Y=n,z=l;else{const o=Math.abs(n-Y)>5,d=Math.abs(l-z)>5;(o||d)&&(window.electronAPI.resizeWindowToContent(n,l),Y=n,z=l)}}}))}const st=["rgba(180, 50, 60, 0.35)","rgba(170, 60, 70, 0.32)","rgba(160, 70, 80, 0.29)","rgba(150, 80, 90, 0.26)","rgba(140, 90, 100, 0.23)","rgba(120, 100, 110, 0.20)","rgba(100, 110, 120, 0.17)","rgba(80, 120, 130, 0.14)","rgba(70, 130, 140, 0.11)","rgba(60, 140, 150, 0.08)"];function Mt(t){return st[t]||st[9]}function At(t,e,a){t.innerHTML=e.map((s,n)=>{const l=(s.profession||"-").split("-"),o=l[0],d=l[1],g=d?N(d):N(o),f=R(o),i=d?R(d):null;let r=f;i&&(r+=` - ${i}`);const c=s.total_count.total||0,y=s.total_count.critical!==void 0&&c>0?Math.round(s.total_count.critical/c*100):"0",P=s.total_count.lucky!==void 0&&c>0?Math.round(s.total_count.lucky/c*100):"0",b=s.realtime_dps_max!==void 0?s.realtime_dps_max:0,I=Number(s.total_dps)||0,w=s.total_healing&&Number(s.total_healing.total)||0,v=lt(String(s.uid),s.name),$=(s.hp||0)/(s.max_hp||1)*100,D=$>50?"#1db954":$>25?"#f39c12":"#e74c3c",S=Mt(n),h=n+1,M=a&&s.uid===a;let E="player-position";return h===1?E+=" rank-1":h===2?E+=" rank-2":h===3&&(E+=" rank-3"),M&&(E+=" local-player"),`<div class="player-bar" data-rank="${s.rank}" data-uid="${s.uid}" data-name="${v}" style="--damage-percent: ${s.damagePercent}%; --damage-bg-color: ${S};">
                    <div class="player-info">
                        <span class="${E}">${h}</span>
                        <button class="add-to-registry-btn" data-uid="${s.uid}" data-name="${v}" title="Add to Player Registry">
                            <i class="fa-solid fa-plus"></i>
                        </button>
                        <img class="class-icon" src="icons/${g.icon}" alt="${r}" title="${r}">
                        <div class="player-details">
                            <span class="player-name">${v} <span style="color: var(--text-secondary); font-size: 9px; font-weight: 400;">(${u("ui.stats.gs")}: ${s.fightPoint})</span></span>
                            <div class="hp-bar">
                                <div class="hp-fill" style="width: ${$}%; background: ${D};"></div>
                                <span class="hp-text">${m(s.hp||0)}/${m(s.max_hp||0)}</span>
                            </div>
                        </div>
                        <div class="player-stats-main">
                            <div class="stat">
                                <span class="stat-label">${u("ui.stats.dps")}</span>
                                <span class="stat-value">${m(I)}</span>
                            </div>
                            <div class="stat">
                                <span class="stat-label">${u("ui.stats.hps")}</span>
                                <span class="stat-value">${m(s.total_hps||0)}</span>
                            </div>
                            <div class="stat">
                                <span class="stat-label">${u("ui.stats.totalDmg")}</span>
                                <span class="stat-value">${m(s.total_damage&&s.total_damage.total||0)}</span>
                            </div>
                            <div class="stat">
                                <span class="stat-label">${u("ui.stats.dmgTaken")}</span>
                                <span class="stat-value">${m(s.taken_damage||0)}</span>
                            </div>
                            <div class="stat">
                                <span class="stat-label">${u("ui.stats.percentDmg")}</span>
                                <span class="stat-value">${Math.round(s.damagePercent)}%</span>
                            </div>
                            <div class="stat">
                                <span class="stat-label">${u("ui.stats.critPercent")}</span>
                                <span class="stat-value">${y}%</span>
                            </div>
                            <div class="stat">
                                <span class="stat-label">${u("ui.stats.critDmg")}</span>
                                <span class="stat-value">${m((s.total_damage.critical||0)+(s.total_damage.crit_lucky||0))}</span>
                            </div>
                            <div class="stat">
                                <span class="stat-label">${u("ui.stats.avgCritDmg")}</span>
                                <span class="stat-value">${m(s.total_count.critical+s.total_count.crit_lucky>0?((s.total_damage.critical||0)+(s.total_damage.crit_lucky||0))/(s.total_count.critical+s.total_count.crit_lucky):0)}</span>
                            </div>
                            <div class="stat">
                                <span class="stat-label">${u("ui.stats.luckyPercent")}</span>
                                <span class="stat-value">${P}%</span>
                            </div>
                            <div class="stat">
                                <span class="stat-label">${u("ui.stats.peakDps")}</span>
                                <span class="stat-value">${m(b)}</span>
                            </div>
                            <div class="stat">
                                <span class="stat-label">${u("ui.stats.totalHeal")}</span>
                                <span class="stat-value">${m(w)}</span>
                            </div>
                    </div>
                </div>
                </div>`}).join(""),setTimeout(()=>{t.querySelectorAll(".add-to-registry-btn").forEach(n=>{n.addEventListener("click",l=>{l.stopPropagation();const o=n.dataset.uid,d=n.dataset.name;Ct(o,d)})})},0)}function it(t,e){const a=(Date.now()-e)/1e3;return a>0?t.totalDamage/a:0}function xt(t,e){const a=document.getElementById("player-bars-container");if(!a)return;if(!t||Object.keys(t).length===0){a.innerHTML=`<div class="skills-message">${u("ui.skills.noData")}</div>`;return}const s=a.querySelector(".skills-container");!s||s.dataset.userCount!==String(Object.keys(t).length)?jt(a,t,e):Ht(a,t,e)}function jt(t,e,a){var l,o,d,g,f,i,r,c;let s=`<div class="skills-container" data-user-count="${Object.keys(e).length}">`;const n=Object.entries(e).sort((y,P)=>{const b=Object.values(y[1].skills||{}).reduce((w,v)=>w+(v.totalDamage||0),0);return Object.values(P[1].skills||{}).reduce((w,v)=>w+(v.totalDamage||0),0)-b});for(const[y,P]of n){const b=P;if(!b||!b.skills)continue;const I=(b.profession||"Unknown").split("-"),w=I[0],v=I[1],$=v?N(v):N(w),D=R(w),S=v?R(v):null;let h=D;S&&(h+=` - ${S}`);const M=lt(y,b.name);s+=`<div class="player-skill-section" data-uid="${y}">
                <div class="player-skill-header" data-collapsible="user">
                    <svg class="collapse-icon" width="12" height="12" viewBox="0 0 12 12" fill="currentColor">
                        <path d="M3 4.5L6 7.5L9 4.5" stroke="currentColor" stroke-width="1.5" fill="none" stroke-linecap="round" stroke-linejoin="round"/>
                    </svg>
                    <img class="class-icon" src="icons/${$.icon}" alt="${$.name}">
                    <span class="player-name">${M}</span>
                    <span class="player-profession">${h}</span>
                </div>
                <div class="skills-grid">`;const E=Object.entries(b.skills).sort((B,H)=>(H[1].totalDamage||0)-(B[1].totalDamage||0));for(const[B,H]of E){const p=H;if(p.totalDamage<=0&&p.totalCount<=0)continue;const rt=it(p,a),ct=p.totalCount>0?p.totalDamage/p.totalCount:0,dt=nt(B,p.displayName),ut=p.type==="伤害"?u("ui.skills.damage"):u("ui.skills.healing"),gt=p.type==="伤害"?"damage":"healing";s+=`<div class="skill-card" data-skill-id="${B}" data-uid="${y}">
                    <div class="skill-header" data-collapsible="skill">
                        <div class="skill-header-left">
                            <svg class="collapse-icon" width="10" height="10" viewBox="0 0 12 12" fill="currentColor">
                                <path d="M3 4.5L6 7.5L9 4.5" stroke="currentColor" stroke-width="1.5" fill="none" stroke-linecap="round" stroke-linejoin="round"/>
                            </svg>
                            <span class="skill-name">${dt} (${B})</span>
                        </div>
                        <span class="skill-type ${gt}">${ut}</span>
                    </div>
                    <div class="skill-stats">
                        <div class="skill-stat">
                            <span class="skill-stat-label">${u("ui.skills.total")}</span>
                            <span class="skill-stat-value" data-stat="total">${m(p.totalDamage)}</span>
                        </div>
                        <div class="skill-stat">
                            <span class="skill-stat-label">${u("ui.stats.dps")}</span>
                            <span class="skill-stat-value" data-stat="dps">${m(rt)}</span>
                        </div>
                        <div class="skill-stat">
                            <span class="skill-stat-label">${u("ui.skills.count")}</span>
                            <span class="skill-stat-value" data-stat="count">${p.totalCount}</span>
                        </div>
                        <div class="skill-stat">
                            <span class="skill-stat-label">${u("ui.skills.avg")}</span>
                            <span class="skill-stat-value" data-stat="avg">${m(ct)}</span>
                        </div>
                        <div class="skill-stat">
                            <span class="skill-stat-label">${u("ui.stats.critPercent")}</span>
                            <span class="skill-stat-value" data-stat="crit">${Math.round(p.critRate*100)}%</span>
                        </div>
                        <div class="skill-stat">
                            <span class="skill-stat-label">${u("ui.stats.critDmg")}</span>
                            <span class="skill-stat-value" data-stat="critdmg">${m((((l=p.damageBreakdown)==null?void 0:l.critical)||0)+(((o=p.damageBreakdown)==null?void 0:o.crit_lucky)||0))}</span>
                        </div>
                        <div class="skill-stat">
                            <span class="skill-stat-label">${u("ui.stats.avgCritDmg")}</span>
                            <span class="skill-stat-value" data-stat="avgcrit">${m((((d=p.countBreakdown)==null?void 0:d.critical)||0)+(((g=p.countBreakdown)==null?void 0:g.crit_lucky)||0)>0?((((f=p.damageBreakdown)==null?void 0:f.critical)||0)+(((i=p.damageBreakdown)==null?void 0:i.crit_lucky)||0))/((((r=p.countBreakdown)==null?void 0:r.critical)||0)+(((c=p.countBreakdown)==null?void 0:c.crit_lucky)||0)):0)}</span>
                        </div>
                        <div class="skill-stat">
                            <span class="skill-stat-label">${u("ui.stats.luckyPercent")}</span>
                            <span class="skill-stat-value" data-stat="lucky">${Math.round(p.luckyRate*100)}%</span>
                        </div>
                    </div>
                </div>`}s+="</div></div>"}s+="</div>",t.innerHTML=s}function Ht(t,e,a){var s,n,l,o;for(const[d,g]of Object.entries(e)){const f=g;if(!(!f||!f.skills))for(const[i,r]of Object.entries(f.skills)){const c=r,y=t.querySelector(`.skill-card[data-skill-id="${i}"][data-uid="${d}"]`);if(!y)continue;const P=it(c,a),b=c.totalCount>0?c.totalDamage/c.totalCount:0,I=y.querySelector('[data-stat="total"]'),w=y.querySelector('[data-stat="dps"]'),v=y.querySelector('[data-stat="count"]'),$=y.querySelector('[data-stat="avg"]'),D=y.querySelector('[data-stat="crit"]'),S=y.querySelector('[data-stat="critdmg"]'),h=y.querySelector('[data-stat="avgcrit"]'),M=y.querySelector('[data-stat="lucky"]'),E=(((s=c.damageBreakdown)==null?void 0:s.critical)||0)+(((n=c.damageBreakdown)==null?void 0:n.crit_lucky)||0),B=(((l=c.countBreakdown)==null?void 0:l.critical)||0)+(((o=c.countBreakdown)==null?void 0:o.crit_lucky)||0),H=B>0?E/B:0;I&&(I.textContent=m(c.totalDamage)),w&&(w.textContent=m(P)),v&&(v.textContent=String(c.totalCount)),$&&($.textContent=m(b)),D&&(D.textContent=`${Math.round(c.critRate*100)}%`),S&&(S.textContent=m(E)),h&&(h.textContent=m(H)),M&&(M.textContent=`${Math.round(c.luckyRate*100)}%`)}}}document.addEventListener("click",t=>{const a=t.target.closest("[data-collapsible]");if(!a)return;const s=a.getAttribute("data-collapsible");if(s==="user"){const n=a.closest(".player-skill-section");if(!n)return;const l=n.querySelector(".skills-grid"),o=a.querySelector(".collapse-icon");l&&o&&(n.classList.toggle("collapsed"),n.classList.contains("collapsed")?(l.style.display="none",o.style.transform="rotate(-90deg)"):(l.style.display="grid",o.style.transform="rotate(0deg)"))}else if(s==="skill"){const n=a.closest(".skill-card");if(!n)return;const l=n.querySelector(".skill-stats"),o=a.querySelector(".collapse-icon");l&&o&&(n.classList.toggle("collapsed"),n.classList.contains("collapsed")?(l.style.display="none",o.style.transform="rotate(-90deg)"):(l.style.display="grid",o.style.transform="rotate(0deg)"))}});window.appState={viewMode:k,sortColumn:j,sortDirection:W,isLocked:T,getCurrentLanguage:ot};
